xlab("Month -October 2013") + ylab("Consumption in Month")
pNov13 = ggplot(Nov_2013, aes(x=DateNTime, y=electricity_consumption)) +
geom_line() +
xlab("Month -November 2013") + ylab("Consumption in Month")
pDec13 = ggplot(Dec_2013, aes(x=DateNTime, y=electricity_consumption)) +
geom_line() +
xlab("Month -Dec 2013") + ylab("Consumption in Month")
grid.arrange(pJuly13,pAug13,pSept13,pOct13,pNov13,pDec13, ncol = 2)
date.hour=strptime("2011-03-27 01:30:00", "%Y-%m-%d %H:%M:%S")
date=c("26/10/2016")
time=c("19:51:30")
day<-paste(date,"T", time)
day.time1=as.POSIXct(day,format="%d/%m/%Y T %H:%M:%S",tz="Europe/Paris")
day.time1
day.time1$year
library(randomForest)
ggplot(Train, aes(x=electricity_consumption)) +
geom_histogram(color = "black", fill = "#996633")
ggplot(Train, aes(x=electricity_consumption)) +
geom_histogram(color = "black", fill = "#996633", binwidth = 50)
ggplot(Train, aes(x=electricity_consumption)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 50)
Train$log_EC = log(Train$electricity_consumption)
ggplot(Train, aes(x=log_EC)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 50)
ggplot(Train, aes(x=log_EC)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 10)
ggplot(Train, aes(x=log_EC)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 1)
ggplot(Train, aes(x=log_EC)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 0.1)
ggplot(Train, aes(x=log_EC)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 0.01)
ggplot(Train, aes(x=log_EC)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 0.09)
Train$sqrt_EC = sqrt(Train$electricity_consumption)
ggplot(Train, aes(x=sqrt_EC)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 0.09)
---
title: "Electicity_Consumption"
author: "Abhishek Porwal"
date: "January 13, 2018"
output: html_document
---
Predict electricity consumption
================================
Try to predict the energy consumption on hourly basis using the given data.
```{r echo=FALSE, Load_library}
library(ggplot2)
library(plyr)
library(dplyr)
library(lubridate)
library(gridExtra)
library(GGally)
library(randomForest)
```
Load the data
```{r echo=FALSE. Load_Data}
Train = read.csv("train.csv")
Test  = read.csv("test.csv")
summary(Train)
str(Train)
summary(Test)
str(Test)
```
```{r echo=FALSE}
Train$DateNTime = as.POSIXct(as.character(Train$datetime))         # Converting factor in date format
Train$Date = strftime(Train$DateNTime, format = "%m/%d/%Y")
Train$Time = strftime(Train$DateNTime, format = "%H:%M:%S")
Train$Time_Factor = as.factor(Train$Time)
str(Train)
tail(Train)
```
```{r echo=FALSE, Visualization, fig.width=9, fig.height=11}
Train$Year = year(Train$datetime)
Train$Month = month(Train$datetime)
#Train$Date_Factor = as.POSIXct(Train$Date)
Year2013 = subset(Train, Train$Year == "2013")
July_2013 = subset(Year2013 , Month == "7")
EC_July_2013 = sum(July_2013$electricity_consumption)
Aug_2013 = subset(Year2013 , Month == "8")
EC_Aug_2013 = sum(Aug_2013$electricity_consumption)
Sept_2013 = subset(Year2013 , Month == "9")
EC_Sept_2013 = sum(Sept_2013$electricity_consumption)
Oct_2013 = subset(Year2013 , Month == "10")
EC_Oct_2013 = sum(Oct_2013$electricity_consumption)
Nov_2013 = subset(Year2013 , Month == "11")
EC_Nov_2013 = sum(Nov_2013$electricity_consumption)
Dec_2013 = subset(Year2013 , Month == "12")
EC_Dec_2013 = sum(Dec_2013$electricity_consumption)
#Monthly_Consump_2013 = sapply(X$Month, function(x) )
#str(x)
pJuly13 = ggplot(July_2013, aes(x=DateNTime, y=electricity_consumption)) +
geom_line() +
xlab("Month -July 2013") + ylab("Consumption in Month")
pAug13 = ggplot(Aug_2013, aes(x=DateNTime, y=electricity_consumption)) +
geom_line() +
xlab("Month -August 2013") + ylab("Consumption in Month")
pSept13 = ggplot(Sept_2013, aes(x=DateNTime, y=electricity_consumption)) +
geom_line() +
xlab("Month -September 2013") + ylab("Consumption in Month")
pOct13 = ggplot(Oct_2013, aes(x=DateNTime, y=electricity_consumption)) +
geom_line() +
xlab("Month -October 2013") + ylab("Consumption in Month")
pNov13 = ggplot(Nov_2013, aes(x=DateNTime, y=electricity_consumption)) +
geom_line() +
xlab("Month -November 2013") + ylab("Consumption in Month")
pDec13 = ggplot(Dec_2013, aes(x=DateNTime, y=electricity_consumption)) +
geom_line() +
xlab("Month -Dec 2013") + ylab("Consumption in Month")
grid.arrange(pJuly13,pAug13,pSept13,pOct13,pNov13,pDec13, ncol = 2)
```
```{r echo=FALSE, Exercise}
date.hour=strptime("2011-03-27 01:30:00", "%Y-%m-%d %H:%M:%S")
date=c("26/10/2016")
time=c("19:51:30")
day<-paste(date,"T", time)
day.time1=as.POSIXct(day,format="%d/%m/%Y T %H:%M:%S",tz="Europe/Paris")
day.time1
day.time1$year
day.time2=as.POSIXlt(day,format="%d/%m/%Y T %H:%M:%S",tz="Europe/Paris")
day.time2
day.time2$year
```
```{r echo=FALSE, More visualization}
str(Train)
ggplot(Train, aes(x=temperature, y=electricity_consumption, fill = var2)) +
geom_boxplot(position = "identity")
ggplot(Train, aes(x=temperature, y=electricity_consumption)) +
geom_point()
ggplot(Train, aes(x=electricity_consumption)) +
geom_histogram(binwidth = 30, color="black", fill="#993366")
ggplot(Train, aes(x=pressure, y=electricity_consumption)) +
geom_point()
ggplot(Train, aes(x=var2, y=electricity_consumption, fill=var2)) +
geom_point()
cor(Train$electricity_consumption, Train$temperature)
cor(Train$electricity_consumption, Train$pressure)
```
```{r echo=FALSE, Correlation}
x1 = c("temperature", "var1", "electricity_consumption")
x2 = c("pressure","windspeed", "electricity_consumption")    # Var2 is categorical variable
ggpairs(Train[,x1])
ggpairs(Train[,x2])
```
Correlation coefficient bewteen differnt variables and the electricity consumption.
|Variable Name        | r-value (Correlation with
electricity consuption)|
|---------------------|----------------------------|
|temperature          |           -0.117           |
|var1                 |            0.134           |
|pressure             |            0.000907        |
|windspeed            |           -0.239           |
```{r echo=FALSE}
ggplot(Train, aes(x=temperature, y=electricity_consumption)) +
geom_point()
```
This plot looks over plotted. So we are putting some trendline to see the general trend in electricity consumption.
```{r echo=FALSE, fig.width=9, fig.height=11}
ggplot(Train, aes(x=temperature, y=electricity_consumption)) +
geom_point(color = "#993366", alpha = 0.25) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs=0.5), color = 'black') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs=0.9), color = 'black')
```
As the temperature is increasing the energy consumption seems to be decreasing.
```{r echo=FALSE. fig.width = 9, fig.height = 11}
ggplot(Train, aes(x=windspeed, y=electricity_consumption)) +
geom_point(color ="#993366", alpha =0.25)
ggplot(Train, aes(x=pressure, y=electricity_consumption)) +
geom_point(color = "#993366", alpha = 0.25) +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs=0.5), color = "black") +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs=0.9), color = "black")
ggplot(Train, aes(x=var1, y=electricity_consumption)) +
geom_point(color = "#993366", alpha =0.25) +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs=0.5), color ="black") +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs=0.9), color ="black")
```
```{r echo=FALSE}
ggplot(Train, aes(x=electricity_consumption)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 50)
Train$log_EC = log(Train$electricity_consumption)
Train$sqrt_EC = sqrt(Train$electricity_consumption)
ggplot(Train, aes(x=log_EC)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 0.09)
ggplot(Train, aes(x=sqrt_EC)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 1)
```
ggplot(Train, aes(x=sqrt_EC)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 1)
ggplot(Train, aes(x=sqrt_EC)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 1)
ggplot(Train, aes(x=temperature)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 0.09)
ggplot(Train, aes(x=temperature)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 3)
ggplot(Train, aes(x=temperature, fill = var2)) +
geom_density(aes(y=..density..), alpha = 0.5)
ggplot(Train, aes(x=electricity_consumption, fill = var2)) +
geom_density(aes(y=..density..), alpha = 0.5)
ggplot(Train, aes(x=electricity_consumption, fill = var2)) +
geom_density(aes(y=..density..), alpha = 0.1)
ggplot(Train, aes(x=electricity_consumption, fill = var2)) +
geom_density(aes(y=..density..), alpha = 0.4)
LRM_EC = lm(electricity_consumption~., data=Train)
library(ggplot2)
library(plyr)
library(dplyr)
library(lubridate)
library(gridExtra)
library(GGally)
library(randomForest)
Train = read.csv("train.csv")
Test  = read.csv("test.csv")
summary(Train)
str(Train)
summary(Test)
str(Test)
Train$DateNTime = as.POSIXct(as.character(Train$datetime))         # Converting factor in date format
Train$Date = strftime(Train$DateNTime, format = "%m/%d/%Y")
Train$Time = strftime(Train$DateNTime, format = "%H:%M:%S")
Train$Time_Factor = as.factor(Train$Time)
str(Train)
tail(Train)
Train$Year = year(Train$datetime)
Train$Month = month(Train$datetime)
#Train$Date_Factor = as.POSIXct(Train$Date)
Year2013 = subset(Train, Train$Year == "2013")
July_2013 = subset(Year2013 , Month == "7")
EC_July_2013 = sum(July_2013$electricity_consumption)
Aug_2013 = subset(Year2013 , Month == "8")
EC_Aug_2013 = sum(Aug_2013$electricity_consumption)
Sept_2013 = subset(Year2013 , Month == "9")
EC_Sept_2013 = sum(Sept_2013$electricity_consumption)
Oct_2013 = subset(Year2013 , Month == "10")
EC_Oct_2013 = sum(Oct_2013$electricity_consumption)
Nov_2013 = subset(Year2013 , Month == "11")
EC_Nov_2013 = sum(Nov_2013$electricity_consumption)
Dec_2013 = subset(Year2013 , Month == "12")
EC_Dec_2013 = sum(Dec_2013$electricity_consumption)
#Monthly_Consump_2013 = sapply(X$Month, function(x) )
#str(x)
pJuly13 = ggplot(July_2013, aes(x=DateNTime, y=electricity_consumption)) +
geom_line() +
xlab("Month -July 2013") + ylab("Consumption in Month")
pAug13 = ggplot(Aug_2013, aes(x=DateNTime, y=electricity_consumption)) +
geom_line() +
xlab("Month -August 2013") + ylab("Consumption in Month")
pSept13 = ggplot(Sept_2013, aes(x=DateNTime, y=electricity_consumption)) +
geom_line() +
xlab("Month -September 2013") + ylab("Consumption in Month")
pOct13 = ggplot(Oct_2013, aes(x=DateNTime, y=electricity_consumption)) +
geom_line() +
xlab("Month -October 2013") + ylab("Consumption in Month")
pNov13 = ggplot(Nov_2013, aes(x=DateNTime, y=electricity_consumption)) +
geom_line() +
xlab("Month -November 2013") + ylab("Consumption in Month")
pDec13 = ggplot(Dec_2013, aes(x=DateNTime, y=electricity_consumption)) +
geom_line() +
xlab("Month -Dec 2013") + ylab("Consumption in Month")
grid.arrange(pJuly13,pAug13,pSept13,pOct13,pNov13,pDec13, ncol = 2)
str(Train)
ggplot(Train, aes(x=temperature, y=electricity_consumption, fill = var2)) +
geom_boxplot(position = "identity")
ggplot(Train, aes(x=temperature, y=electricity_consumption)) +
geom_point()
ggplot(Train, aes(x=electricity_consumption)) +
geom_histogram(binwidth = 30, color="black", fill="#993366")
ggplot(Train, aes(x=pressure, y=electricity_consumption)) +
geom_point()
ggplot(Train, aes(x=var2, y=electricity_consumption, fill=var2)) +
geom_point()
cor(Train$electricity_consumption, Train$temperature)
cor(Train$electricity_consumption, Train$pressure)
x1 = c("temperature", "var1", "electricity_consumption")
x2 = c("pressure","windspeed", "electricity_consumption")    # Var2 is categorical variable
ggpairs(Train[,x1])
ggpairs(Train[,x2])
ggplot(Train, aes(x=temperature, y=electricity_consumption)) +
geom_point()
ggplot(Train, aes(x=temperature, y=electricity_consumption)) +
geom_point(color = "#993366", alpha = 0.25) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs=0.5), color = 'black') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs=0.9), color = 'black')
ggplot(Train, aes(x=windspeed, y=electricity_consumption)) +
geom_point(color ="#993366", alpha =0.25)
ggplot(Train, aes(x=pressure, y=electricity_consumption)) +
geom_point(color = "#993366", alpha = 0.25) +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs=0.5), color = "black") +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs=0.9), color = "black")
ggplot(Train, aes(x=var1, y=electricity_consumption)) +
geom_point(color = "#993366", alpha =0.25) +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs=0.5), color ="black") +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs=0.9), color ="black")
ggplot(Train, aes(x=electricity_consumption)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 50)
Train$log_EC = log(Train$electricity_consumption)
Train$sqrt_EC = sqrt(Train$electricity_consumption)
ggplot(Train, aes(x=log_EC)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 0.09)
ggplot(Train, aes(x=sqrt_EC)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 1)
ggplot(Train, aes(x=temperature)) +
geom_histogram(color = "black", fill = "#993366", binwidth = 3)
ggplot(Train, aes(x=temperature, fill = var2)) +
geom_density(aes(y=..density..), alpha = 0.5)
ggplot(Train, aes(x=electricity_consumption, fill = var2)) +
geom_density(aes(y=..density..), alpha = 0.4)
LRM_EC = lm(electricity_consumption~., data=Train)
LRM_EC = lm(electricity_consumption~., data=Train)
View(Train)
str(Train)
LRM_EC = lm(electricity_consumption~ temperature + var1 + pressure + windspeed + var2, data=Train)
summary(LRM_EC)
library(memisc)
m1 = lm(electricity_consumption~temperature, data=Train)
m2 = update(m1,~.+var1)
mtable(m1,m2)
m3 = update(m1,~.+pressure)
mtable(m1,m2,m3)
m4 = update(m1,~.+windspeed)
mtable(m1,m2,m3,m4)
m5 = update(m1,~.+var2)
mtable(m1,m2,m3,m4,m5)
data("AirPassengers")
str(AirPassengers)
start(AirPassengers)
end(AirPassengers)
frequency(AirPassengers)
summary(AirPassengers)
plot(AirPassengers)
abline(reg = lm(AirPassengers~time(AirPassengers)))
cycle(AirPassengers)
plot(aggregate(AirPassengers, FUN = mean))
boxplot(AirPassengers~cycle(AirPassengers))
library(ggplot2)
library(plyr)
library(dplyr)
library(lubridate)
library(gridExtra)
library(GGally)
library(randomForest)
library(memisc)
Train = read.csv("train.csv")
Test  = read.csv("test.csv")
summary(Train)
str(Train)
summary(Test)
str(Test)
plot(Train)
data("AirPassengers")
data(AirPassengers)
cycle(AirPassengers)
frequency(AirPassengers)
class(AirPassengers)
plot(AirPassengers)
ts.plot(AirPassengers)
?cycle
deltat(AirPassengers)
acf(AirPassengers)
pacf(AirPassengers)
summary(AirPassengers)
plot(AirPassengers)
abline(reg=lm(AirPassengers~time(AirPassengers)))
plot(aggregate(AirPassengers, fun=mean))
plot(aggregate(AirPassengers, FUN=mean))
boxplot(AirPassengers)
boxplot(AirPassengers~cycle(AirPassengers) )
?time
adf.test(diff(log(AirPassengers)), alternative = "stationary", k=0)
install.packages("tseries")
library(tseries)
adf.test(diff(log(AirPassengers)), alternative = "stationary", k=0)
?adf.test
x =log(AirPassengers)
x
AirPassengers
plot(x)
par(mfrow(1,2))
library(gridExtra)
p1= plot(AirPassengers)
p2= plot(x)
grid.arrange(p1,p2, ncol=1)
grid.arrange(p1,p2, ncol=2
grid.arrange(p1,p2, ncol=2)
grid.arrange(p1,p2, ncol=2)
par(mfrow=c(1,2))
par(mfrow=c(1,2))
plot(AirPassengers)
plot(x)
par(mfcol=c(1,2))
plot(AirPassengers)
plot(x)
par(mfcol=c(1,1))
plot(x)
par(mfcol=c(2,1))
plot(AirPassengers)
plot(x)
par(mfcol=c(1,1))
plot(x)
par(mfrow=c(1,1))
par(mfrow=c(2,1))
plot(AirPassengers)
plot(x)
par(mfrow=c(1,1))
?mfrow
?par
y= diff(log(AirPassengers))
plot(y)
?diff
y
x
4.744932-4.718499
4.976734-4.744932
4.976734-4.718499
acf(AirPassengers)
pacf(AirPassengers)
acf(y)
pacf(y)
fit = arima(log(AirPassengers)r)
fit = arima(log(AirPassengers))
summary(fit)
fit
fit = arima(log(AirPassengers), c(0,1,1))
fit
fit = arima(log(AirPassengers), c(0,1,1), seasonal = list(order = c(0,1,1)), period = 12)
fit = arima(log(AirPassengers), c(0,1,1), seasonal = list(order = c(0,1,1)), period = 12)
fit = arima(log(AirPassengers), c(0,1,1), seasonal = list(order = c(0,1,1), period = 12)))
fit = arima(log(AirPassengers), c(0,1,1), seasonal = list(order = c(0,1,1), period = 12))
fit
pred = predict(fit, n.ahead = 10*12)
pred
ts.plot(AirPassengers, 2.718^pred$pred, log=  "y", lty = c(1,3))
?ts.plot
library(ggplot2)
library(plyr)
library(dplyr)
library(lubridate)
library(gridExtra)
library(GGally)
library(randomForest)
library(memisc)
Train = read.csv("train.csv")
Test  = read.csv("test.csv")
summary(Train)
str(Train)
summary(Test)
str(Test)
class(Train)
plot(Train$electricity_consumption)
ts.plot(Train$electricity_consumption)
time(Train)
x = ts(trai)
x = ts(Train)
class(x)
str(x)
start(x)
end(x)
frequency(x)
cycle(x)
?ts
Train$DateNTime = as.POSIXlt(as.character(Train$datetime))         # Converting factor in date format
str(Train)
library(ggplot2)
library(dplyr)
library(ggplot2)
library(dplyr)
library(scales)
library(gridExtra)
library(GGally)
library(memisc)
library(corrplot)
setwd("C:/Users/dell/Desktop/Sapient Online assignment")
getwd()
RedWine = read.csv("winequality-red.csv",sep = ";", header = T)
names(RedWine)
summary(RedWine)
str(RedWine)
ggplot(RedWine, aes(quality)) + geom_histogram(colour = "black", fill = "#993366",
binwidth = 0.2) +
xlab("Wine Quality") + ylab("count") + ggtitle("Distribution of (Red) Wine Quality")
p1 = ggplot(RedWine, aes(x=fixed.acidity)) +
geom_histogram(colour = "black", fill = "#993366", binwidth = 0.5)
p2 = ggplot(RedWine, aes(x=volatile.acidity)) +
geom_histogram(colour = "black", fill = "#993366", binwidth = 0.05)
p3 = ggplot(RedWine, aes(x=citric.acid)) +
geom_histogram(colour = "black", fill = "#993366", binwidth = 0.05)
p4 = ggplot(RedWine, aes(x=residual.sugar)) +
geom_histogram(colour = "black", fill = "#993366", binwidth = 0.4)
p5 = ggplot(RedWine, aes(x=chlorides)) +
geom_histogram(colour = "black", fill = "#993366", binwidth = 0.025)
p6 = ggplot(RedWine, aes(x=free.sulfur.dioxide)) +
geom_histogram(colour = "black", fill = "#993366", binwidth = 4)
p7 = ggplot(RedWine, aes(x=total.sulfur.dioxide)) +
geom_histogram(colour = "black", fill = "#993366", binwidth = 20)
p8 = ggplot(RedWine, aes(x=density)) +
geom_histogram(colour = "black", fill = "#993366", binwidth = 0.001)
p9 = ggplot(RedWine, aes(x=pH)) +
geom_histogram(colour = "black", fill = "#993366", binwidth = 0.05)
p11 = ggplot(RedWine, aes(x=alcohol)) +
geom_histogram(colour = "black", fill = "#993366", binwidth = 0.25)
p10 = ggplot(RedWine, aes(x=sulphates)) +
geom_histogram(colour = "black", fill = "#993366", binwidth = 0.1)
grid.arrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11, ncol = 3)
p1 = ggplot(RedWine, aes(x=sulphates)) +
geom_histogram(colour = "black", fill = "#993366", binwidth = 0.1)
RedWine$log_sulphate = log(RedWine$sulphates)
p2 = ggplot(RedWine, aes(x=log_sulphate)) +
geom_histogram(colour = "black", fill = "#993366", binwidth = 0.1) +
xlab("Logarithm of Sulphates")
grid.arrange(p1,p2, ncol =1) # In comparison, log scale is more normally distributed.
CorMatrix = cor(RedWine)
CorMatrix
